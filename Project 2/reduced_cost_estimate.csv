Group hierarchy,Region,Description,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary
My Estimate,US East (Ohio),,Amazon EC2,0,715.39,8584.68,USD,"Operating system (Linux), Quantity (10), Pricing strategy (EC2 Instance Savings Plans 1 Year No Upfront), Storage for each EC2 instance (General Purpose SSD (gp2)), Storage amount (100 GB), Instance type (t4g.xlarge)"
My Estimate,US East (Ohio),,Amazon Virtual Private Cloud (VPC),0,3350.7,40208.4,USD,Number of NAT Gateways (2)
My Estimate,US East (Ohio),,Amazon RDS for PostgreSQL,0,873,10476,USD,"Quantity (1), Pricing strategy (Standard Reserved Instances 1 Year No Upfront), Storage volume (General Purpose SSD (gp2)), Storage amount (3 TB per month), Instance type (db.m5.large)"
My Estimate,US East (Ohio),,Application Load Balancer,0,118.63,1423.56,USD,Number of Application Load Balancers (1)
My Estimate,US East (Ohio),,Amazon Route 53,0,502.2,6026.4,USD,Hosted Zones (1)
My Estimate,US East (Ohio),,S3 Standard,0,575,6900,USD,S3 Standard storage (25000 GB per month)
My Estimate,US East (Ohio),,Data Transfer,0,0,0,USD,"DT Inbound: Not selected (0 TB per month), DT Outbound: Amazon CloudFront (50 TB per month)"
,,,,,,,,
,,,,,,,,
,,,,,,,,
Acknowledgement,,,,,,,,
"* AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services.",,,,,,,,
,,,,,,,,
,,,,,,,,
"Note by Koulick - In this price reduction exercise, I reduced the instance type from m4.2xlarge to t4g.xlarge. I also reduced the DB instance type from r5.2xlarge to m5.large. The load balancing can be made more efficient, so I reduced ELB from 3 to 1. Lastly, reduced S3 storage by 50% to bring costs under $6500. Hopefully with this architecture, the system can still meet compute load of 50k users.",,,,,,,,